=head1 NAME

CHANGES - List of revisions

=head1 Revision History

This document contains list of bug fixes and feature additions to SWISH-E.

=head2 Version 2.2

Release Date: ???????

Many large changes were made internally in the code, some for performance reasons, some for feature
changes and additions, and some to prepare for new features in later versions of SWISH-E.

=over 4

=item * Documentation!

Documentation is now included in the source distribution as .pod (perldoc) files, and as HTML files.
In addition, the distribution can now generate PDF, postscript, and unix man pages from the source
.pod files.  See L<REAME|README> for more information.

=item * Internal data stored as Properties

Pre 2.2 some internal data was stored in fixed locations within the index, namely the
file name, file size, and title.  2.2 introduced new internal data such as the last modified date, and
document summaries.
This data is considered I<meta data> since it is data about a document.
Instead of adding new data to the internal structure of the index file, it was decided to use the MetaNames
and PropertyNames feature of swish to store this meta information.
This allows for new meta data to be added at a later time (e.g. Content-type), and provides an easy and customizable
way to print results with the C<-p> switch and the new C<-x> switch.
In addition, this data can now be sorted by this internal data.

For example, to sort by the rank and title:

    swish-e -w foo -s swishrank desc swishtitle asc

=item * The header display has been slighly reorganized.

If you are parsing output headers in a program then you may need to adjust your code.

=item * Results are now combined when searching more than one index

Swish now merges (and sorts) the results from multiple indexes when using C<-f> to specify
more than one index.  This change effects the way maxhits (C<-m>) works.
Here's a summary of the way swish works for the different versions.


    1.3.2 - MaxHits returns first N results starting from the first index.
            e.g. maxhits=20; 15 hits Index1, 40 hits Index2
            All 15 from Index1 plus first five from Index2 = 20 hits.

    2.0.0 - MaxHits returns first N results from each index.
            e.g. Maxhits=20; 15 hits Index1, 40 hits Index2
            All 15 from Index1 plus 15 from Index2 = 40 hits

    2.2.0 - Results are merged and first N results are returned.
            e.g. Maxhits=20; 15 hits Index1, 40 hits Index2
            Results are merged from each index and sorted
            (rank is the default sort) and only the first
            20 are returned.


=item * Indexing and searching speed improvements

A number of imporvements in indexing and searching speed were made, especially for searching
very large indexes and sorting by properties.

=item * New B<prog> document source indexing method

You can now use -S prog to use an external program to supply documents
to swish.  This program can be used to spider web servers, index databases,
or to convert any type of document into html, xml, or text, so it can be
indexed by swish.  Examples are given in the C<prog-bin> directory.

=item * The indexing parser was rewritten to be more logical.

TranslateCharacters now is done before WordCharacters is checked.  For example,

    WordCharacters abcdefghijklmnopqrstuvwxyz
    TranslateCharacters ñ n

Now C<El Niño> will be indexed as El Nino (el and nino), even though C<ñ> is
not listed in WordCharacters.  Previously, stopwords were checked after stemming and
soundex conversions, as well as most of the other word checks (WordCharacters, min/max length
and so on).  This meant that the stopword list probably didn't work as expected when using stemming.

=item * Example C<user.config> file removed.

Previous versions of swish included a configuration file called C<user.config> which
contained examples of all directives.
This has been replace by a series of example configuration files located in the C<conf>
directory.  The configuration directives are now described in L<SWISH-CONFIG|SWISH-CONFIG>.

=item * Ports to Win32 and VMS

David Norris has included the files required to build swish under windows.  In addition, a binary version of
swish for Win32 is now included in the distribution.
See C<src/win32>.

Jean-François Piéronne has provided the files required to build swish under OpenVMS.  See C<src/vms>
for more information.

=back

Changes to Configuration File Directives.  Please see L<SWISH-CONFIG|SWISH-CONFIG> for
more info.

=over 4

=item * New directives: IndexContents and DefaultContents

Previously, swish parsed all documents as HTML documents.  Now swish knows how to parse HTML, TXT, and XML
documents.  The IndexContents and DefaultContents tells swish how to index files by their extension.

=item * New directive: UndefinedMetaTags [error|ignore|index|auto]

This describes what to do when a meta tag is found in a document that is not listed in the MetaNames directive.

=item * New directive: IgnoreTags

Will ignore listed tags in XML files

=item * New directive: SwishProgParameters *list of words*

Passes words listed to the external swish-e program when running with
C<-S prog> document source method.

=item * New directive: ConvertHTMLEntities [yes|no]

Disables parsing and conversion of HTML entities.

=item * New directive DontBumpPositionOnMetaTags

The word position is bumped when a new metatag is found -- this
is to prevent phrases from matching across meta tags.

This currently works only with XML parsing.

=item * New directive Words

This implementation is not complete yet (and not yet documented).

Buzzwords are words that should be indexed as-is, without checking for stopwords,
word length, WordCharacters, or any other of the word limiting features.  This allows indexing
of things like C<C++>.

Currenly, IgnoreFirstChar and IgnoreLastChar will be stripped before processing, but it may be
necessary to have separate IgnoreFirst/Last for buzzwords since, for example, you may wish to
all C<+> within swish words, but strip C<+> from the start/end of swish words, but not from the buzzword C<C++>.


=back

Changes to command line arguments.  See L<SWISH-RUN|SWISH-RUN> for documentation on these
switches.

=over 4

=itme * New command line argument C<-H>

Controls the level (verbosity) of header information printed with search results.

=item * New command line argument C<-x>

Provides additional header output and allows for a I<format string> to describe what data to print.

=item * New command line argument C<-k>

Prints words stored in the swish index.

=item * New command line argument C<-N>

Provides a way to do incremental indexing by comparing last modification dates.
You pass C<-N> a path to a file and only files newer than the last modified date of that file will be indexed.

=item * Enhanced command line argument C<-D>

When C<-D> is used with C<-v 4> additional debugging data is printed.

=item * Enhanced command line argument C<-d>

Now -d can accept some back-slashed characters to be used as output separators.

=item * Enhanced command line argument C<-P>

Now -P sets the phrase delimiter character in searches.



=back

