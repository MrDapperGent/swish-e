=head1 NAME

The SWISH-E FAQ - Answers to Common Questions

=head1 Frequently Asked Questions

=head2 What is SWISH-E?

SWISH-E is B<S>imple B<W>eb B<I>ndexing B<S>ystem for B<H>umans - B<E>nhanced.
With it, you can quickly and easily index directories of files or remote web sites and search the generated
indexes.

=head2 Swish crashes and burns on a certain file. What can I do? 

You can use a FileRules operation to exclude the particular file name, or pathname, or its title. If there are serious problems in indexing
certain types of files, they may not have valid text in them (they may be binary files, for instance). You can use NoContents to exclude that
type of file.

=head2 Swish isn't working and I can't solve the problem myself

The SWISH-E discussion list is the place to go.  http://sunsite.berkeley.edu/SWISH-E/.

Before you post you might read the next question.  Also, be sure to include in the following when asking for help.

=over 4

=item * The swish-e version (./swish-e -V)

=item * What you are indexing (and perhaps a sample), and the number of files

=item * Your swish-e configuration file

=item * Any error messages that swish-e is reporting

=back

In addition, the utilities strace (or truss), and a backtrace from a debugger such as gdb
may provide valuable information.  This can be helpful in tracking down segfaults:

    % gdb /path/to/swish-e
    [now run with parameters that cause a segfault]
    (gdb) run -w foo -f index.file 
    (gdb) bt


=head2 Swish isn't indexing a certain word or phrase. 

By default, swish-e tries to make it best guesses as to what it thinks are reasonable words and filters out "garbage" words according to a set
of rules, for instance, if swish-e encounters a word that has no vowels, it doesn't index it. You can change these rules by editing the conf.h
file in the src directory of the swish-e distribution package. By editing the rules, you may be able to index quite a few more words, or less,
depending on your preference.

Configuration file directives (L<SWISH-CONFIG|SWISH-CONFIG>) C<WordCharacters>, C<BeginCharactes>, C<EndCharacters>,
C<IgnoreFirstChar>, and C<IgnoreLastChar> also control what words swish indexes.
Use of the command line arguments C<-k> and C<-D> are useful when debugging these issues -- index a single
file that contains words that are are are not indexing as you expect and use -D -v 4 to out debugging information
about the index.  A useful command might be:

    ./swish-e -f index.swish-e -D -v 4 | grep -v ^0

=head2 How can I index all my compressed files?

Swish can make use of "filters" that will convert files such as MS Word documents, PDF, or gzipped files into text, HTML
or XML and can thus be indexed by SWISH-E.
Please see L<SWISH-CONFIG|SWISH-CONFIG/"Document Filter Directives"> for more information.


=head2 Can I index 8-bit text? 

Yes, you can. Just remember that swish-e retains capitalization for all characters other than [a-z A-Z], so the word "Çelik" is not retrieved by
"çelik", "Celik", or "celik". You can index and use words containing any entity from ! (#033) to ÿ (#255).

Also, the TranslateCharacters directive (L<SWISH-CONFIG|SWISH-CONFIG>) can translate characters while indexing
and searching.  C<TranslateCharacters :ascii7:> is a predefined set of characters that will translate eight bit characters to ascii7 characters.
Using the :ascii7: rule will e.g. translate "Ääç" to "aac". This means: searching "Çelik", "çelik" or "celik"
will all match the same word.  


=head2 How can I index phrases? 

Phrases are indexed automatically.  To search for a phrase simply place double quotes around the phrase.

For example:

    swish-e -w 'free and "fast search engine"'

=head2 How can I implement keywords in my documents? 

In your HTML files you can put keywords in HTML META tags or in XML blocks.

META tags can have three formats in your source documents:

    <META NAME="DC.subject" CONTENT="digital libraries">

    <!-- META START NAME="meta1" -->
        some content
    <!-- META END -->

And in XML format

    <meta2>
        Some Content
    </meta2>


Then, to inform SWISH-E about the existence of the meta name in your documents,
edit the line in your configuration file:

    MetaNames DC.subject meta1 meta2

=head2 I want to generate a list of files to be indexed and pass it to swish-e. 

One thing you can do is make a simple script to generate a configuration file full of IndexDir directives.
For instance, make a separate file called files.conf and put something like this in it:

    IndexDir /this_is_file_1/file.html
    IndexDir /usr/local/www
    IndexDir file2.html /some/directory/
    ...

Then call swish-e like this (assuming you're using a main swish-e.conf file): 

swish-e -c swish-e.conf files.conf

=head2 I run out of memory trying to index my files. 

It's true that indexing can take up a lot of memory!
One thing you can do is make many indices of smaller content instead of trying to do
everything at once. You can then merge all the smaller pieces together with the C<-M> switch.

Another option is use the C<-e> switch.  This will require less memory, but indexing will take longer as
not all data will be stored in memory while indexing.

=head2 I can't limit search to title/body/comment. I can't search with meta names, all the names are indexed as "plain" 

Check in the config.h file if #define INDEXTAGS is set to 1. If it is, change it to 0, recompile, and index again. When INDEXTAGS is 1,
ALL the tags are indexed as plain text, that is you index "title", "h1", and so on, AND they loose their indexing meaning. If INDEXTAGS is
set to 0, you will still index meta tags and comments, unless you have indicated otherwise in the user config file with the IndexComments
directive. 

=head2 Do I need to reindex my site each time I upgrade to a new Swish-e version? 

Yes. At times it might not strictly necessary, but since you don't really know if anything in the index has changed,
it is a good rule to reindex anyway. 

=head2 Can I index PDF or Winword documents with swish-e?

Swish-e can internally only handle HTML, WML, XML and TXT (text) files.
To index other document types you have to install a filter into swish-e using the FileFilter config directive.
These filters have to translate a document into the swish-e known formats (e.g. text or html). You can use
"xpdf" or "ghostscript" to convert pdf to text or e.g. "catdoc" to convert winword documents on unix.  
For details, please have a look on the filter configuration part.


=head1 Document Info

$Id$

.


